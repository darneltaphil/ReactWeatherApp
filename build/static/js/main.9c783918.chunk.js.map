{"version":3,"sources":["components/Header.js","components/Recent.js","components/Footer.js","components/Weatherdisplay.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","src","alt","Recent","props","displayWeather","recentList","map","item","key","Footer","action","type","placeholder","value","Router","this","getWeatherLocation","localtime","name","country","getWeatherCurrent","temperature","width","precip","wind_speed","wind_dir","pressure","cloudcover","to","timezone_id","lat","lon","region","React","Component","App","getWeather","theTownLocation","state","undefined","axios","get","then","response","console","log","data","success","swal","fire","setState","location","current","handleSubmit","event","preventDefault","FormLocation","target","recordRecentSearch","recentSearch","length","indexOf","isLoading","bind","setTimeout","prevProps","prevState","onSubmit","required","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9c783918.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header() {\r\n\t\r\n  return (\r\n\r\n      \t\t\t<div className=\"site-header\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<a href=\"index.html\" className=\"branding\">\r\n\t\t\t\t\t\t<img src=\"images/logo.png\" alt=\"\" className=\"logo\" />\r\n\t\t\t\t\t\t<div className=\"logo-type\">\r\n\t\t\t\t\t\t\t<h1 className=\"site-title\">NitroWeather</h1>\r\n\t\t\t\t\t\t\t<small className=\"site-description\">Rain, Sun and Snow ... <em>In your  Pocket</em></small>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</a> \r\n\r\n\t\t\t\t\t<div className=\" main-navigation\">\r\n\t\t\t\t\t Login\r\n\t\t\t\t\t</div> \r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div> \r\n\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction Recent(props) {\r\n\tconst displayWeather=props.recentList;\r\n\t//console.log (displayWeather)\r\n\t\treturn (\r\n\t         \r\n\t\t\t<main className=\"main-content\">\r\n\t\t\t\t<div className=\"fullwidth-block\">\r\n\t\t\t\t\t<div className=\"container\"> \r\n\t\t\t\r\n\t\t\t<h2 className=\"section-title\">Recent Searches</h2>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\r\n          {displayWeather.map(item => (\r\n\t\t\t\t<div className=\"col-md-3 col-sm-6\"  key={item}>\r\n\t\t\t\t\t<div className=\"live-camera\">\r\n\t\t\t\t\t\t<figure className=\"live-camera-cover\"><img src=\"images/live-camera-1.jpg\" alt=\"\"/></figure>\r\n\t\t\t\t\t\t<h3 className=\"location\">{item}</h3>\r\n\t\t\t\t\t\t<small className=\"date\"></small>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n          ))}\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</main> \r\n  );\r\n\t}\r\n  \r\n\r\n\r\nexport default Recent;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    \t\t\t<footer className=\"site-footer\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-md-8\">\r\n\t\t\t\t\t\t\t<form action=\"#\" className=\"subscribe-form\">\r\n\t\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"Enter your email to subscribe...\"/>\r\n\t\t\t\t\t\t\t\t<input type=\"submit\" value=\"Subscribe\"/>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<center><p className=\"colophon\">Copyright 2020 PreMEST - Weather App Project.</p>\r\n\t\t\t\t\t<p className=\"colophon\">Designed by Arnold Kofi  <em>(Nitro)</em>. All rights reserved</p></center>\r\n\t\t\t\t</div>\r\n\t\t\t</footer> \r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react'\r\n\r\nexport default class Router extends React.Component {\r\n\t\r\n    render(){ \r\n     \r\n        return (\r\n                <div className=\"forecast-table\">\r\n                <div className=\"container\">\r\n            <div className=\"forecast-container\">\r\n                <div className=\"today forecast\">\r\n                    <div className=\"forecast-header\">\r\n                        <div className=\"day\">{this.props.getWeatherLocation.localtime}</div>\r\n                        <div className=\"date\"> </div>\r\n                    </div> \r\n                    <div className=\"forecast-content\">\r\n                        <div className=\"location\"> {this.props.getWeatherLocation.name}, {this.props.getWeatherLocation.country} </div>\r\n                        <div className=\"degree\">\r\n                            <div className=\"num\">{this.props.getWeatherCurrent.temperature}<sup>o</sup>C</div>\r\n                            <div className=\"forecast-icon\">\r\n                                <img src=\"images/icons/icon-1.svg\" alt=\"\" width=\"90\"/>\r\n                            </div>\t\r\n                        </div>\r\n                    </div>\r\n    \r\n                </div>    \r\n                <div className=\"forecast\">\r\n                    <div className=\"forecast-header\">\r\n                        <div className=\"day\">Weather Details</div>\r\n                    </div> \r\n                    <div className=\"location\">\r\n                    \r\n                        <div className=\"forecast-icon\">\r\n                            <img src=\"images/icons/icon-3.svg\" alt=\"\" width=\"48\"/>\r\n                        </div>\r\n                        <p className=\"detail-title\">Rainfall: <img src=\"images/icon-umberella.png\" alt=\"\"/> {this.props.getWeatherCurrent.precip}</p>\r\n                        <p className=\"detail-title\">Wind Speed: <img src=\"images/icon-wind.png\" alt=\"\"/>{this.props.getWeatherCurrent.wind_speed}km/h</p>\r\n                        <p className=\"detail-title\">Wind Rirection: <img src=\"images/icon-compass.png\" alt=\"\"/>{this.props.getWeatherCurrent.wind_dir}</p>\r\n                        <p className=\"detail-title\">Pressure: <img src=\"images/icon-compass.png\" alt=\"\"/>{this.props.getWeatherCurrent.pressure}</p>\r\n                        <p className=\"detail-title\">Cloudcover: <img src=\"images/icon-compass.png\" alt=\"\"/>{this.props.getWeatherCurrent.cloudcover}</p>\r\n    \r\n                        \r\n                    </div>\r\n                </div>\r\n                <div className=\"forecast\">\r\n                    <div className=\"forecast-header\">\r\n                        <div className=\"day\">Location Details </div>\r\n                    </div> \r\n                    <div className=\"\">\r\n                    \r\n                        <div className=\"forecast-icon\">\r\n                            <img src=\"images/icons/icon-3.svg\" alt=\"\" width=\"48\"/>\r\n                        </div>\r\n                        <p className=\"detail-title\">Time Zone: <img to=\"./images/icon-umberella.png\" alt=\"\"/> {this.props.getWeatherLocation.timezone_id}</p>\r\n                        <p className=\"detail-title\">Latitude:<img src=\"images/icon-wind.png\" alt=\"\"/>{this.props.getWeatherLocation.lat}<sup>o</sup></p>\r\n                        <p className=\"detail-title\">Longitude: <img src=\"images/icon-compass.png\" alt=\"\"/>{this.props.getWeatherLocation.lon}<sup>o</sup></p>\r\n                        <p className=\"detail-title\">Region: <img src=\"images/icon-compass.png\" alt=\"\"/>{this.props.getWeatherLocation.region}</p>\r\n                        <p className=\"detail-title\">Local Time: <img src=\"images/icon-compass.png\" alt=\"\"/>{this.props.getWeatherLocation.localtime}</p>\r\n    \r\n                        \r\n                    </div>\r\n                </div>\r\n    \r\n            \r\n            </div>\r\n    \r\n        </div>\r\n        </div>\r\n    )}\r\n    }\r\n    ","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport swal from 'sweetalert2';\r\n// import Login from './Login'\r\nimport Header from './components/Header'\r\nimport Recent from './components/Recent'\r\nimport Footer from './components/Footer'\r\nimport Weatherdisplay from './components/Weatherdisplay'\r\nimport axios from 'axios'\r\nimport './components/style.css'\r\n\r\n class App extends React.Component {\r\n\t \r\n\t constructor() {\r\n    super();\r\n    this.state = {\r\n\t\tvalue: 'Accra', //Default Town for Weather\r\n\t\tgetWeatherLocation: [],\r\n\t\tgetWeatherCurrent: [],\r\n\t\trecentSearch:[\"Accra\"],\r\n\t\tisLoading: true,\r\n\r\n\t};\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\tthis.getWeather = this.getWeather.bind(this)\r\n\tthis.recordRecentSearch\t= this.recordRecentSearch.bind(this) \r\n  }\r\n\t //Lifecycle Methods\r\n\t componentDidMount() {\r\n\t\tsetTimeout(() => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tisLoading: false,\r\n\t\t\t\t})\r\n\t\t\t}, 2500)\r\n\t\tthis.getWeather()\r\n   \t\t//console.log(\"componentDidMount WhichLocation \" + this.state.value)\r\n}\r\n\t \r\n\t componentDidUpdate(prevProps, prevState) {\r\n\tif (this.state.value !== prevState.value) {\r\n\t\tthis.setState({value:this.state.value })\r\n\t\t//alert(\"I am in App State  changed new value  \" + this.state.value)\r\n\t\tthis.getWeather()\r\n\t\tthis.recordRecentSearch()\r\n\t}\r\n}\r\n\t\r\n\t //Other Methods\r\n\tgetWeather = ()=>{\r\n\t\t\tconst theTownLocation = (this.state.value==='')||(this.state.value===undefined)?\"Accra\":this.state.value\r\n\t\t\taxios.get(\"getWeather/\"+theTownLocation)\r\n\t\t\t.then(response => {\r\n\t\t\t\t//Control Response\r\n\t\t\t\tconsole.log(response)\r\n\t\t\t\tif(response.data.success===false){\r\n\t\t\t\t\tswal.fire(\"Invalid Request\", \"your location <b>\"+theTownLocation+\"</b> is invalid\")\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\tvalue:\"Accra\",             \r\n\t\t\t\t\t}) \r\n\r\n\t\t\t\t}else{\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t//GetWeatherJson: response.data,\r\n\t\t\t\t\tgetWeatherLocation: response.data.location,\r\n\t\t\t\t\tgetWeatherCurrent: response.data.current,                 \r\n\t\t\t\t}) }\r\n\t\t\t//console.log(this.state.GetWeatherLocation);\r\n\t\t\t})\r\n\t};\r\n\t\r\n\t\r\n  \thandleSubmit=(event)=> {\r\n\t\tevent.preventDefault();\r\n\t\tconst FormLocation=event.target[0].value\r\n\t\tthis.setState({value:FormLocation })\r\n  }\r\n\t//control the number of recent items saved\r\n\trecordRecentSearch = () =>{\r\n\t\tconsole.log(this.state.recentSearch)\r\n\t\tif ((this.state.recentSearch.length<5) && (this.state.recentSearch.indexOf(this.state.value)!==-1)){\r\n\r\n\t\tthis.setState({\r\n\t\t  recentSearch: [...this.state.recentSearch, this.state.value],\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n  \t}\r\n\t\r\n\r\nrender(){\r\n    return (\r\n\t\t<Router>                \r\n\t                \r\n\t\t\r\n\t\t<Header/>\r\n\t\t<div className=\"hero form-bg\"  >\r\n               <div className=\"container\">\r\n                  <form  onSubmit={this.handleSubmit} name=\"SearchForm\"   className=\"find-location\"  >\r\n                    <input  type=\"text\" name=\"town\" placeholder=\"Find your location...\" required/>\r\n\t\t        \t<input type=\"submit\" value=\"Find Location\"/>\r\n                  </form>\r\n               </div>\r\n           </div>       \t\t\t\t\t\t\r\n\t\t{this.state.isLoading ? \r\n\t\t<center><h1>Loading...</h1></center> :\r\n\t\t<Route exact path=\"/\" component={()=><Weatherdisplay \r\n\t\t\t\tgetWeatherLocation={this.state.getWeatherLocation}\r\n\t\t\t\tgetWeatherCurrent={this.state.getWeatherCurrent}/> \r\n\t\t\t }/> \r\n\t\t}\r\n\t\t<Recent recentList={this.state.recentSearch}/>\r\n        <Footer />\r\n\r\n\t\t\r\n\t\t</Router>  \r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}